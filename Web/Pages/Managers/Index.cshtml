@page
@model YourNamespace.Pages.IndexModel
@{
    ViewData["Title"] = "Payments Summary";
}

<h2 class="display-4">Payments Summary</h2>

<div class="mb-3">
    <form method="post" id="exportForm" asp-page-handler="Export" class="mb-3">
        <input type="hidden" name="TheaterLabelsJson" value='@Model.TheaterLabelsJson' />
        <input type="hidden" name="TheaterPaymentsJson" value='@Model.TheaterPaymentsJson' />
        <input type="hidden" name="MovieLabelsJson" value='@Model.MovieLabelsJson' />
        <input type="hidden" name="MoviePaymentsJson" value='@Model.MoviePaymentsJson' />
        <input class="btn btn-primary" type="submit" value="Download Payments Summary" />
    </form>

    <!-- Other forms can be added here if needed -->

</div>

<!-- Charts for displaying payment summaries -->
<div>
    <h3>Total Payments: @Model.TotalAmount</h3>
</div>

<div>
    <h3>Payments by Theater</h3>
    <canvas id="theaterPaymentsChart" width="400" height="200"></canvas>
</div>

<div>
    <h3>Payments by Movie</h3>
    <canvas id="moviePaymentsChart" width="400" height="200"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Chart for Payments by Theater
        var ctxTheater = document.getElementById('theaterPaymentsChart').getContext('2d');
        var theaterPaymentsChart = new Chart(ctxTheater, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Model.TheaterLabelsJson),
                datasets: [{
                    label: 'Total Payments by Theater',
                    data: @Html.Raw(Model.TheaterPaymentsJson),
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Chart for Payments by Movie
        var ctxMovie = document.getElementById('moviePaymentsChart').getContext('2d');
        var moviePaymentsChart = new Chart(ctxMovie, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Model.MovieLabelsJson),
                datasets: [{
                    label: 'Total Payments by Movie',
                    data: @Html.Raw(Model.MoviePaymentsJson),
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        document.querySelector('.custom-file-input').addEventListener('change', function (e) {
            var fileName = document.getElementById("ExcelFile").files[0].name;
            var nextSibling = e.target.nextElementSibling;
            nextSibling.innerText = fileName;
        });
    </script>
}
