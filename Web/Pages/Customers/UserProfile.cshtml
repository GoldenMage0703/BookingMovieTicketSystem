@page
@model Web.Pages.Customers.UserProfileModel
@{
    var payments = Model.PaginatedPayments;
    var totalPages = Model.TotalPages;
}
<section style="background-color: #ffff;">
    <div class="container py-5">
        <div class="row">
            <div class="col-lg-4">
                <div class="card mb-4">
                    <div class="card-body text-center">
                        <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3.webp"
                             alt="avatar" class="rounded-circle img-fluid" style="width: 150px;">
                        <h5 class="my-3">@Model.User.LastName @Model.User.FirstName</h5>
                        <p class="text-muted mb-1">@Model.User.Email</p>
                        <p class="text-muted mb-4">@Model.User.Phone</p>
                        <div class="d-flex justify-content-center mb-2">
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editModal">Edit</button>
                            <button type="button" class="btn btn-primary ms-2" data-bs-toggle="modal" data-bs-target="#ChangePassModal">Change Password</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-8">
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">First Name</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">@Model.User.FirstName</p>
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Last Name</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">@Model.User.LastName</p>
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Email</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">@Model.User.Email</p>
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Phone</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">@Model.User.Phone</p>
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Address</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">@Model.User.Address</p>
                            </div>
                        </div>
                        <hr>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="card mb-4 mb-md-0">
                            <div class="card-body">
                                @foreach (var payment in payments)
                                {
                                    <div>
                                       
                                        <p>Total Amount: @payment.TotalAmount</p>
                                        <p>Payment Date: @payment.PaymentDate</p>
                                        <button type="button" class="btn btn-info" data-payment-id="@payment.PaymentId" data-bs-toggle="modal" data-bs-target="#bookingDetailsModal">View Booking Details</button>
                                        <hr />
                                    </div>
                                }
                                <div class="pagination">
                                    @for (int i = 1; i <= totalPages; i++)
                                    {
                                        <div class="ms-2"><a asp-page="./UserProfile" asp-route-pageNumber="@i" class="@(Model.PageNumber == i ? "active" : "")">@i</a></div>
                                        
                                    }
                                   
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Modal for editing user profile -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="EditProfile" onsubmit="return validateForm()" novalidate>
                    <div class="mb-3">
                        <label for="firstName" class="form-label">First Name</label>
                        <input type="text" class="form-control" id="firstName" name="UserUpdate.FirstName" value="@Model.User.FirstName">
                    </div>
                    <div class="mb-3">
                        <label for="lastName" class="form-label">Last Name</label>
                        <input type="text" class="form-control" id="lastName" name="UserUpdate.LastName" value="@Model.User.LastName">
                    </div>
                  
                    <div class="mb-3">
                        <label for="phone" class="form-label">Phone</label>
                        <input type="text" class="form-control" id="phone" name="UserUpdate.Phone" value="@Model.User.Phone">
                    </div>
                    <div class="mb-3">
                        <label for="address" class="form-label">Address</label>
                        <input type="text" class="form-control" id="address" name="UserUpdate.Address" value="@Model.User.Address">
                    </div>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal for changing password -->
<div class="modal fade" id="ChangePassModal" tabindex="-1" aria-labelledby="ChangePassModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ChangePassModalLabel">Change Password</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="changePassForm" method="post" asp-page-handler="ChangePassProfile">
                    <input type="hidden" id="previousPassword" value="@Model.previousPassword" />
                    <div class="mb-3">
                        <label for="currentPassword" class="form-label">Current Password</label>
                        <input type="password" class="form-control" id="currentPassword" name="CurrentPassword">
                        <div id="currentPasswordError" class="text-danger mt-2" style="display: none;">Current password does not match the previous password.</div>
                    </div>
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">New Password</label>
                        <input type="password" class="form-control" id="newPassword" name="newPass">
                        <div id="passwordRequirements" class="text-muted mt-2">
                            Password must be at least 8 characters long, with at least 1 number, 1 uppercase letter, and 1 special character.
                        </div>
                        <div id="passwordError" class="text-danger mt-2" style="display: none;">New password does not meet the requirements.</div>
                    </div>
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">Confirm Password</label>
                        <input type="password" class="form-control" id="confirmPassword" name="ConfirmPassword">
                        <div id="confirmPasswordError" class="text-danger mt-2" style="display: none;">Passwords do not match.</div>
                    </div>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Booking Details -->
<div class="modal fade" id="bookingDetailsModal" tabindex="-1" aria-labelledby="bookingDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookingDetailsModalLabel">Booking Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="bookingDetailsContent">
                <!-- Booking details will be loaded here -->
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const bookingDetailsModal = document.getElementById('bookingDetailsModal');
        const bookingDetailsContent = document.getElementById('bookingDetailsContent');

        bookingDetailsModal.addEventListener('show.bs.modal', async (event) => {
            const button = event.relatedTarget;
            const paymentId = button.getAttribute('data-payment-id');

            try {
                const response = await fetch(`/Customers/UserProfile?handler=BookingDetails&paymentId=${paymentId}`);

                // Check if the response is okay
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                // Parse the JSON
                const bookingDetails = await response.json();

                // Check if the response contains data
                if (Array.isArray(bookingDetails) && bookingDetails.length > 0) {
                    // Display booking details
                    bookingDetailsContent.innerHTML = bookingDetails.map(detail => `
                                     <p>Movie Name: ${detail.Showtime.Movie.Title}</p>
                                                 <p>Theater Name: ${detail.Showtime.Theater.Name}</p>
                                        <p>Seat: ${detail.Seat.RowNum}${detail.Seat.SeatNum}</p>
                                                        <p>Date: ${new Date(detail.Showtime.StartTime).toLocaleDateString()} </p>
                                                                                <p>Time: ${new Date(detail.Showtime.StartTime).getHours()}:${new Date(detail.Showtime.StartTime).getMinutes()} - ${new Date(detail.Showtime.EndTime).getHours()}:${new Date(detail.Showtime.EndTime).getMinutes()}</p>
                            <hr />
                        `).join('');
                } else {
                    bookingDetailsContent.innerHTML = `<p>No booking details found.</p>`;
                }
            } catch (error) {
                console.error('Error fetching booking details:', error);
                bookingDetailsContent.innerHTML = `<p>Error loading booking details.</p>`;
            }
        });
    });
    function validateForm() {
        const fields = ["firstName", "lastName", "email", "phone", "address"];
        let isValid = true;

        fields.forEach(function (field) {
            const input = document.getElementById(field);
            if (input.value.trim() === "") {
                input.classList.add("is-invalid");
                isValid = false;
            } else {
                input.classList.remove("is-invalid");
            }
        });

        return isValid;
    }


</script>
<style>
    .is-invalid {
        border-color: #dc3545;
    }
</style><script src="~/js/signalr/editpass.js"></script>